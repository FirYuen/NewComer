day12学习笔记

一.继续git
通常，合并分支时，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。
禁用Fast forward模式：git merge --no-ff -m "merge with no-ff" dev.这样，从分支历史上就可以看出分支信息。

1.stash
工作只进行到一半，还没法提交,但现在需要创建一个分支完成其他任务。可以使用git stash功能。
git stash：可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作。
现在使用git status查看工作区就是干净的
git stash list：查看当前储藏的列表
恢复stash区指定内容：git stash apply [stash@{0}]，但恢复之后不删除stash区的内容。
删除stash区指定内容：git stash drop [stash@{0}]
恢复同时删除stash内容：git stash pop [stash@{0}]

2.多人协作的工作模式通常是这样：
    首先，可以试图用git push origin <branch-name>推送自己的修改；
    如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；
    如果合并有冲突，则解决冲突，并在本地提交；
    没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！

  如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>。

3.tag
打一个新标签：git tag <name> [commitId],不指定的话，默认打给最新提交的commit
查看所有标签：git tag
查看标签信息：git show <tagname>
创建带有说明的标签: git tag -a v0.1 -m "version 0.1 released" 1094adb
删除标签：git tag -d v0.1
推送某个标签到远程:git push origin <tagname>
推送全部尚未推送到远程的本地标签: git push origin --tags
远程删除tag:git push origin :refs/tags/v0.9

4.配置别名
git config --global alias.graphic "log --graph --pretty=oneline --abbrev-commit" 把显示分支合并情况的图
这时输入 git graphic 就可以看到合并情况了。


二.上午一个小时，下午半个小时帮忙接电话，测试通话


三.编译
参考：
89/git的使用;
http://s2.sv.wxjyun.cn:17373/help#why

project.mak指的是5110SD_Z453C_E_DS88_N.mak。参考上面的网址，在该文件中添加几个参数。
project.mak添加配置：
BIRD_CONFIG_CODE=配置编码（如：287596263）
BIRD_COMPATIBLE_MARK=兼容标识（如：A1）
BIRD_COMPATIBLE_MARK_CHECK_APK=yes（启用拨号指令 显示兼容配置检查结果） 
然后他提示什么就添加什么。
其他全部选Ignore，注意Ａ与A的区别（一个是中文的Ａ）

编译环境建立：
source build/envsetup.sh
lunch  这里要选择编译匹配的平台架构和模式
选择 sp7731c_1h10_bird_oversea-userdebug

编译目标都采用 BUILD-BUILDTYPE形式，其中 BUILD 是表示特定功能组合的代号,表示编译出的镜像可以运行在什么环境.。
BUILDTYPE 是以下类型之一： 
1.user:权限受限;
2.userdebug:比user多了root权限和可调试性，是调试时首选的编译类型
3.eng:具有额外调试工具的开发配置

make update-api：如果修改了Android的公开类，编译时会报错,需要将修改内容与API的doc文件更新到一致。
最后make -j8，并行编译,因为本机是4核，一般设置为核心数的2倍。可以查看cat /proc/cpuinfo获取CPU信息。












