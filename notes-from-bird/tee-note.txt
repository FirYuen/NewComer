平台TEE移植的一般流程

一.TEE简介
TEE是google自Android 7.0开始引入的。TEE(Trust Execution Environment)可信执行环境使用 ARM 的 Trustzone™ 虚拟化主处理器，创建安全的可信执行环境。
对于我们Android平台来说，目前TEE的主要作用是保护如指纹数据，GoogleKey(Keybox)之类的需要保证安全隔离的数据。
目前MTK平台我们主要对接移植的是 豆荚tee , 瓶钵tee这两家TEE厂商。
展讯平台我们一般使用展讯自研的TEE不需要额外移植，个别项目有移植瓶钵tee。


二.移植前准备工作
 
1. 确认我们的需求
 移植前，需要提出我们的需求，并提交给TEE厂商。
 
 一般来说，需要确认以下事项：
a. 调试平台是否需求指纹、人脸等，googlekey外单一般是必需的
b. 产线工具，激活流程等是否变更(比如：从2019.06开始瓶钵开始推动keybox上传到瓶钵服务器后激活，且需要使用U盾)
c. 可信数据存储位置
   这里主要是确认可信存储位置的所在分区，一般该平台如有做过更早的版本则倾向于使用与此版本相同的分区(例：39p-瓶钵tee存到protect分区，39Q-我们也让瓶钵存到protect)。这样方便升级
   另外，我们一般不使用rpmb分区，此分区与cpu绑定，不利于售后服务
d. 是否可升级(P升Q , O升P等)
   可升级性一般要考虑tee版本和分区一致性。(例：39p-豆荚tee使用lite版本，39Q-豆荚我们一般也要求使用lite版本)。
   当然这个不是绝对，但是版本和分区一致，可以减少一些不必要的操作，具体还是要咨询tee厂商.
e. 调试瓶钵tee时需要提前说明，GoogleKey不上传服务器(客户申请的mada可以由客户决定是否上传；我们申请的mada不上传瓶钵服务器，平台调试时一般也采取不上传服务器的方式去验证)
f. 如果是多平台共仓库的，也需要提前说明，不能影响已经调好的平台
   
   
2. 准备代码环境和手机
 Tee厂商如果确认可以做的话，请客户经理帮忙立项。立项完成之后，TEE厂商会安排FAE移植，以现场或远程的方式。
 在FAE移植前，我们需要做的事情：
a. 准备userdebug版本的代码工程，确认可以编过，可以开机。
b. 准备调试项目的手机，装好串口线 
c. 保留一个调试前的版本，使用Agenewtool工具记录一下状态，方便对比
d. 如果激活工具有变更，比如原先不使用U盾，现在使用U盾，请TEE厂商将变更的工具先寄过来
 
 
三.现场或远程调试

一般调试前，我们可以和FAE再复述一下我们的需求，确认传达无误。
请FAE做好宏控，确认代码的影响范围。
 
 调试时：
 1. 提供给FAE 客制化文件与原文件之间的对应关系，便于他们调试
	比如 bird/make/xxx.mk 对应 device/xxx/xxx/ProjectConfig.mk等等 ，主要是bird下客制化的mk和dts文件
 2. 提供给FAE代码工程和编译命令
 3. 协助FAE解决其调试和编译中的问题
 
 调试完毕时：
 此时FAE还在现场或是在线，我们应该把以下问题问清楚：
 
 1. 如何判断TEE激活状态,googlekey写入状态？----- 代码中获取的方法，以及调试时可以获取的方法
 2. 如何开启或关闭TEE相关指纹支持/人脸支持？ ---- 需要开关什么宏，或是修改哪些地方
 3. TEE占用内存情况？ ---- 区分只有googlekey的版本，带指纹，带人脸，带指纹和人脸等等 各要开多少内存
 4. TEE镜像的位置和查看版本的方式 ---- 方便客制化 和 后期确认版本
 5. googlekey公钥数组的位置和填写方式？ ---- 方便后面客制化
 6. 是否有其他一些需要特别注意的地方？
 
 还应自己验证一下：移植的需求是否ok,激活写key,人脸解锁或指纹等等。
 确认ok之后，请FAE整理一下差分包。

 
四.代码整理合入和客制化

一般来说，我们先保留FAE调试的工程(保留现场，方便对比和追查问题)。重新开一个工程用于合入FAE的tee修改。

合入代码时，我们一定要确认代码的控制范围和正确性：
1. FAE给的代码有些地方可能没有加宏控，我们应都给补上
2. 代码中有疑问的地方，应及时向FAE提出，请FAE确认是否修改
3. 平台有两个TEE时，做好区分，控制好两者交叉的地方，确保互不影响

一般我们需要客制化以下文件：
1. tee镜像
2. googlekey公钥数组
3. trustzone.mk 

合入完成后，我们需要验证：
1. 全量编译 (new)是否ok  --- 编译ok, 功能ok
2. 增量编译 (remake)是否ok --- 编译ok, 功能ok
3. 关闭tee相关宏，是否ok ---- 编译ok, 确认关闭有效
4. 是否影响平台原有tee ---- (例：原有豆荚tee,已验证ok; 移植完瓶钵tee,把瓶钵的宏关闭，开启豆荚看下其功能是否正常)
5. 确认占用的内存数以及其他属性变化等 ---- tee版本对比调试前的版本


五. 测试、代码上传和文档整理
1. 测试
tee相关的测试项一般有：
a. 工具激活写入相关项 
b. gms测试中tee/googlekey相关项
c. 以往tee测试中遇到的问题(一般是锁屏相关问题)
d. 带指纹或人脸解锁的，还需要测试这些功能

具体测试内容以测试组的测试用例为准。

2. 代码上传
代码上传时注意仔细检查，因为一般TEE涉及的模块会比较多，上传完毕之后最好自己更新一下工程重新编一下，看下是否ok

3. 文档整理
 文档一般放在 工程的 bird 或是 bird/bird_doc 目录
 我们需要说明和记录： 
 a. 开启tee的方法
 b. 关闭tee的方法
 c. 客制化文件的位置和客制化方法(tee镜像，googlekey公钥数组等)
 d. 其他一些需要特别注意的事项(比如瓶钵的证书必须和相关属性对应等等)
 e. 上传记录
 f. 后续有相关更新或bug解决，也应在此文档中有所记录
 
 
 
